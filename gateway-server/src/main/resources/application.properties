spring.application.name=gateway-server
server.port=8090

spring.cloud.gateway.discovery.locator.enabled=true

#spring.cloud.gateway.routes[0].id=oauth-server
#spring.cloud.gateway.routes[0].uri=lb://OAUTH-SERVER
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/secutiry/**
#spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2

#spring.cloud.gateway.routes[1].id=msvc-user
#spring.cloud.gateway.routes[1].uri=lb://MSVC-USER
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/users/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=2
#spring.cloud.gateway.routes[1].filters[1]=SampleCookie=Hola mi mensaje personalizado para productos!, user, Cristian

#spring.cloud.gateway.routes[2].id=msvc-cliente
#spring.cloud.gateway.routes[2].uri=lb://MSVC-CLIENTE
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/clients/**
#spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[2].filters[0].args.name=clients
#spring.cloud.gateway.routes[2].filters[0].args.statusCodes=500
#spring.cloud.gateway.routes[2].filters[0].args.fallbackUri=forward:/api/clients/find/5
#spring.cloud.gateway.routes[2].filters[1]=StripPrefix=2
#spring.cloud.gateway.routes[2].filters[2]=AddRequestHeader=token-request, tokenrequest
#spring.cloud.gateway.routes[2].filters[3]=AddResponseHeader=token-response, tokenresponse
#spring.cloud.gateway.routes[2].filters[4]=AddRequestParameter=name, Cristian

#spring.cloud.gateway.routes[3].id=msvc-product
#spring.cloud.gateway.routes[3].uri=lb://MSVC-PRODUCT
#spring.cloud.gateway.routes[3].predicates[0]=Path=/api/products/**
#spring.cloud.gateway.routes[3].filters[0]=StripPrefix=2

#spring.cloud.gateway.routes[4].id=msvc-item
#spring.cloud.gateway.routes[4].uri=lb://MSVC-ITEM
#spring.cloud.gateway.routes[4].predicates[0]=Path=/api/items/**
#spring.cloud.gateway.routes[4].filters[0]=StripPrefix=2

#spring.cloud.gateway.routes[5].id=msvc-order
#spring.cloud.gateway.routes[5].uri=lb://MSVC-ORDER
#spring.cloud.gateway.routes[5].predicates[0]=Path=/api/orders/**
#spring.cloud.gateway.routes[5].filters[0]=StripPrefix=2

spring.config.import=optional:configserver:http://localhost:8888/
spring.cloud.loadbalancer.ribbon.enabled=false

management.endpoints.web.exposure.include=*

eureka.instance.instance-id=${spring.application.name}:${random.uuid}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30

# Configuración de Circuit Breaker
#resilience4j.circuitbreaker.configs.defecto.sliding-window-size=6
#resilience4j.circuitbreaker.configs.defecto.failure-rate-threshold=50
#resilience4j.circuitbreaker.configs.defecto.wait-duration-in-open-state=20s
#resilience4j.circuitbreaker.configs.defecto.permitted-number-of-calls-in-half-open-state=4
#resilience4j.circuitbreaker.configs.defecto.slow-call-duration-threshold=3s
#resilience4j.circuitbreaker.configs.defecto.slow-call-rate-threshold=50
#resilience4j.circuitbreaker.instances.clients.base-config=defecto

# Configuración de Time Limiter
#resilience4j.timelimiter.configs.defecto.timeout-duration=3s
#resilience4j.timelimiter.instances.clients.base-config=defecto
